# Generated by Django 5.2.4 on 2025-09-03 09:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100, unique=True)),
                ('department_image', models.ImageField(blank=True, null=True, upload_to='department_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_request_id', models.CharField(blank=True, max_length=50, null=True)),
                ('checkout_request_id', models.CharField(blank=True, max_length=50, null=True)),
                ('result_code', models.IntegerField(blank=True, null=True)),
                ('result_desc', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=50, null=True)),
                ('user_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('transaction_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle', models.CharField(choices=[('C1', 'Cycle 1'), ('C2', 'Cycle 2'), ('C3', 'Cycle 3')], default='C1', max_length=2)),
                ('course_code', models.CharField(max_length=10)),
                ('course_name', models.CharField(max_length=100, unique=True)),
                ('course_image', models.ImageField(blank=True, null=True, upload_to='course_images/')),
                ('course_level', models.CharField(choices=[('L6', 'Level 6'), ('L5', 'Level 5'), ('L3', 'Level 3'), ('L4', 'Level 4')], default='L6', max_length=2)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TrainerApp.department')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trainer_name', models.CharField(max_length=100)),
                ('trainer_number', models.CharField(max_length=15)),
                ('name_of_institution', models.CharField(max_length=200)),
                ('date_of_preparation', models.DateField()),
                ('number_of_learners', models.IntegerField()),
                ('course_class', models.CharField(max_length=100)),
                ('number_of_weeks', models.IntegerField(blank=True, null=True)),
                ('number_of_sessions_per_week', models.IntegerField(blank=True, null=True)),
                ('hours_per_session', models.IntegerField(blank=True, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('course', models.CharField(blank=True, max_length=100, null=True)),
                ('unit', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='TrainerApp.transactions')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(blank=True, choices=[('M1', 'Module 1'), ('M2', 'Module 2'), ('M3', 'Module 3'), ('M4', 'Module 4'), ('M5', 'Module 5'), ('M6', 'Module 6')], default='M1', max_length=2, null=True)),
                ('unit_code', models.CharField(max_length=20)),
                ('unit_name', models.CharField(max_length=100)),
                ('competency', models.CharField(blank=True, choices=[('BC', 'Basic Competency'), ('CR', 'Core Competency'), ('CC', 'Common Competency')], default='BC', max_length=2, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TrainerApp.course')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='TrainerApp.department')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=100, unique=True)),
                ('document_file', models.FileField(upload_to='documents/')),
                ('document_type', models.CharField(choices=[('OS', 'Occupational Standards'), ('CU', 'Curriculum'), ('AT', 'Assessment Tools'), ('LP', 'Learning Plan'), ('WT', 'Weighting Tool'), ('OD', 'Other Documents')], default='OS', max_length=2)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('downloads', models.PositiveIntegerField(default=0)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TrainerApp.unit')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
